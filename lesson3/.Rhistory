scale_x_discrete(breaks = 1:31) +
facet_wrap(~dob_month,ncol = 3)
summary(pf)
names(pf)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
#+ scale_x_discrete(breaks = 1:31) +
#facet_wrap(~dob_month,ncol = 3)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
geom_histogram(binwidth = 365, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 365, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = 1, color = 'black', fill = '#099DD9')
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000)
scale_x_continuous(limits = c(0, 1000))
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000))
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 7))
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 7), breaks = seq(1,7,1))
gplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(bindwidth = .25,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(bindwidth = 50,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(binwidth = .25,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
names(pf)
summary(pf$age)
View(pf)
ggplot(aes(x = age, data = pf))+
geom_histogram(binwidth = 1, color = 'black', fill = 'orange') +
xlab('Ages') +
ylab('Frequency')
ggplot(aes(x = age, data = pf))+
geom_histogram(binwidth = 1, color = 'black', fill = 'orange') +
ggplot(aes(x = age, data = pf))+
geom_histogram(binwidth = 1, color = 'black', fill = 'orange')
ggplot(aes(x = age, data = pf))+
geom_histogram(binwidth = 1, color = 'black', fill = '#F79420')
names(pf)
summary(pf$age)
#now to create a histogram of ages
ggplot(aes(x = age, data = pf))+
geom_histogram(binwidth = 1, color = 'black', fill = '#F79420')
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(binwidth = .25,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
#scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7))
+xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = dob_day), data = pf) +
geom_histogram() +
scale_x_discrete(breaks = 1:31) +
facet_wrap(~dob_month,ncol = 3)
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 30, 1), limits = c(0, 30)) +
xlab('Age') +
ylab('Frequency')
scale_x_continuous(breaks = seq(1, 10, 1), limits = c(0, 30)) +
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 10, 1), limits = c(0, 30)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 30, 1), limits = c(0, 30)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 30, 1), limits = c(0, 100)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 2,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(2, 30, 2), limits = c(0, 100)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 2,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(2, 30, 2), limits = c(0, 30)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 5,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(5, 110, 5), limits = c(10, 110)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 5,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(10, 110, 10), limits = c(100, 110)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 10,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(10, 110, 10), limits = c(100, 110)) +
xlab('Age') +
ylab('Frequency')
```
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 10,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(10, 110, 10), limits = c(90, 110)) +
xlab('Age') +
ylab('Frequency')
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_discrete(breaks = seq(0, 113, 5))
getwd()
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
names(pf)
library('ggplot2')
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks = 1:31)
#install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram() +
scale_x_discrete(breaks = 1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram() +
scale_x_discrete(breaks = 1:31) +
facet_wrap(~dob_month,ncol = 3)
summary(pf)
names(pf)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
#+ scale_x_discrete(breaks = 1:31) +
#facet_wrap(~dob_month,ncol = 3)
```
```{r}
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
```
```{r}
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
```
```{r}
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
```
```{r}
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
```
```{r}
table(pf$gender)
```
```{r}
by(pf$friend_count, pf$gender, summary)
```
```{r}
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
```
```{r}
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = 1, color = 'black', fill = '#099DD9')
```
```{r}
#instructor ggplot solution see notes for qplot solution
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
```
```{r}
#I set a new scale to zoom in on the data
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420') +
scale_x_continuous(limits = c(0, 7), breaks = seq(1,7,1))
```
```{r}
#add labels
ggplot(aes(x = tenure / 365), data = pf) +
geom_histogram(binwidth = .25,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
```
```{r}
#quiz to create a histogram of ages and play with data
#what names do we have to work with?
names(pf)
summary(pf$age)
#now to create a histogram of ages
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1,color = 'black', fill = '#F79420') +
xlab('Age') +
ylab('Frequency')
#hmm, the upper extremes strain credulity
```
```{r}
#let's split this up a bit
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 5,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(5, 110, 5), limits = c(10, 110)) +
xlab('Age') +
ylab('Frequency')
```
```{r}
#let's look at that upper range
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 10,color = 'black', fill = '#F79420') +
scale_x_continuous(breaks = seq(10, 110, 10), limits = c(90, 110)) +
xlab('Age') +
ylab('Frequency')
```
```{r}
#instructor ggplot solution
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_discrete(breaks = seq(0, 113, 5))
```
```{r}
install.packages('gridExtra')
library(gridExtra)
```
library(gridExtra)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = scale_x_log10(friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p3 = ggplot(aes(x = scale_x_sqrt(friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
# arrange plots in grid
grid.arrange(p1, p2, p3, p4,ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
grid.arrange(p1, p2, p3,ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = scale_x_log10(friend_count), data = pf) +
geom_histogram()
p3 = ggplot(aes(x = scale_x_sqrt(friend_count), data = pf) +
geom_histogram()
grid.arrange(p1, p2, p3,ncol=1)
grid.arrange(p1, p2, p3,ncol=1)
p2 = ggplot(aes(x = scale_x_log10(friend_count), data = pf) +
geom_histogram()
p3 = ggplot(aes(x = scale_x_sqrt(friend_count), data = pf) +
geom_histogram()
grid.arrange(p1,p3,ncol=1)
grid.arrange(p1,ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = scale_x_log10(friend_count)), data = pf) +
geom_histogram()
p3 = ggplot(aes(x = scale_x_sqrt(friend_count)), data = pf) +
geom_histogram()
# arrange plots in grid
grid.arrange(p1, p2, p3, ncol=1)
p2 = ggplot(aes(x = scale_x_log10(friend_count)), data = pf) +
geom_histogram()
p2 = ggplot(aes(x = scale_x_log10(friend_count)), data = pf) +
geom_histogram() +
scale_x_continuous()
p3 = ggplot(aes(x = scale_x_sqrt(friend_count)), data = pf) +
geom_histogram() +
scale_x_continuous()
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25, fill = '#5760AB') +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#5760AB') +
scale_x_log10() +
xlab('log10(friend_count)')
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#5760AB') +
scale_x_sqrt() +
ylab('sqrt(friend_count)')
# arrange plots in grid
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25, fill = #F79420') +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#5760AB') +
scale_x_log10() +
xlab('log10(friend_count)')
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#5760AB') +
scale_x_sqrt() +
ylab('sqrt(friend_count)')
# arrange plots in grid
grid.arrange(p1, p2, p3, ncol=1)
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25, fill = '#F79420') +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
p2 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#F79420') +
scale_x_log10() +
xlab('log10(friend_count)')
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#F79420') +
scale_x_sqrt() +
ylab('sqrt(friend_count)')
# arrange plots in grid
grid.arrange(p1, p2, p3, ncol=1)
p3 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#F79420') +
scale_x_sqrt() +
xlab('sqrt(friend_count)')
grid.arrange(p1, p2, p3, ncol=1)
library(gridExtra)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25, fill = '#F79420')
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#F79420')
#Here is a better way of doing it
p1 = ggplot(aes(x = friend_count), data = pf) +
geom_histogram(fill = '#F79420')
p2 = p1 + scale_x_log10() +
xlab('log10(friend_count)')
p3 = p1 +
scale_x_sqrt() +
xlab('sqrt(friend_count)')
grid.arrange(p1,p2,p3,ncol=1)
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
```{r}
'''Use a frequency polygon to determine which gender makes more likes on the www (www_likes)'''
'''we need to subset the data for not gender = na and add y ..etc to get proportions.  Tha latter is because there are many more males than females in the data set.  We know from previous analysis that females tend to have more likes, where does the transitions occur?'''
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
```
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(300, 1000), breaks = seq(300, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(500, 1000), breaks = seq(500, 1000, 50)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(530, 1000), breaks = seq(530, 1000, 25)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(530, 1000), breaks = seq(530, 1000, 5)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_continuous(limits = c(530, 600), breaks = seq(530, 600, 5)) +
xlab('Friend Count') +
ylab('Percentage of users with that friend count')
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender))
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
pf$www_likes
sum(pf$www_likes)
subset(pf$www_likes, is.male(gender))
subset(pf$www_likes, gender == male)
subset(pf$www_likes, gender == 'male')
names(pf)
subset(pf$www_likes, pf$gender == 'male')
sum(subset(pf$www_likes, pf$gender == 'male'))
summary(pf$www_likes)
table(pf$gender)
by(pf$www_likes, pf$gender, summary)
by(pf$www_likes, pf$gender, summary)
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot')
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot',ylim = c(0,1000))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
scale_y_continuous(c(0,1000))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
scale_y_continuous(limits = c(0,1000))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
coord_cartesian(ylim = c(0,1000))
ggplot(aes(x = gender,y= friend_count,data= subset(pf,!is.na(gender))))+
geom_boxplot()+
coord_cartesian(ylim = c(0,1000))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
scale_y_continuous(c(0,250))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
scale_y_continuous(ylim = c(0,250))
qplot(x = gender, y = friend_count,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
coord_cartesian(ylim = c(0,250))
by(pf$friend_count,pf$gender,summary)
names(pf)
qplot(x = gender, y = friendships_initiated,data = subset(pf,!is.na(gender)),geom = 'boxplot') +
coord_cartesian(ylim = c(0,250))
by(pf$friendships_initiated,pf$gender,summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
#assign new column to NA
pf$mobile_check_in <- NA
#use if else statement to alter values base on mobile likes, if they did a mobile like, they use mobile, if not, probably not.  So if mobile likes are gt 0, then assing one, else assign o.  This is just like excel syntax FYI.
pf$mobile_check_in <-ifelse(pf$mobile_likes > 0,1,0)
#set factor levels
pf$mobile_check_in <- factor(pf$mobile_check_in)
#summarize the data
summary(pf$mobile_check_in)
length(pf$mobile_check_in)
summary(pf$mobile_check_in)/length(pf$mobile_check_in)
summary(pf$mobile_check_in)/length(pf$mobile_check_in) *100
summary(pf$mobile_check_in == 1)/length(pf$mobile_check_in) *100
summary(pf$mobile_check_in == 1)/length(pf$mobile_check_in) *100
sum(pf$mobile_check_in == 1)/length(pf$mobile_check_in) *100
